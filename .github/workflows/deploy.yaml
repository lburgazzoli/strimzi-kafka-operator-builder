name: Build and Deploy Strimzi images

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      branch:
        required: true
        type: string
      continer-registry:
        type: string
        required: true
      continer-registry-organization:
        type: string
        required: true
    secrets:
      github-token:
        required: true
      continer-registry-username:
        required: true
      continer-registry-password:
        required: true

env:
  LANG: en_US.UTF-8

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout ${{ inputs.repo }}'
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.repo }}
          ref: ${{ inputs.branch }}

      - name: 'SetUp JDK 17'
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: 'Cache Maven packages'
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom-*.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      - name: 'Patch API group'
        run: |
          sed -i "s/kafka.strimzi.io/strimzi.rhoc.bf2.dev/g" api/src/main/java/io/strimzi/api/kafka/model/Constants.java
          sed -i "s/core.strimzi.io/core.strimzi.rhoc.bf2.dev/g" api/src/main/java/io/strimzi/api/kafka/model/Constants.java

          yq -i '.rules[1].apiGroups[0] = "strimzi.rhoc.bf2.dev"' packaging/install/cluster-operator/023-ClusterRole-strimzi-cluster-operator-role.yaml
          yq -i '.rules[2].apiGroups[0] = "core.strimzi.rhoc.bf2.dev"' packaging/install/cluster-operator/023-ClusterRole-strimzi-cluster-operator-role.yaml
          yq -i '.rules[0].apiGroups[0] = "strimzi.rhoc.bf2.dev"' packaging/install/cluster-operator/031-ClusterRole-strimzi-entity-operator.yaml

          for F in api/src/test/resources/io/strimzi/api/kafka/model/*.yaml; do
              if [ $(yq e '.apiVersion == "kafka.strimzi.io/v1alpha1"' "${F}") == "true" ]; then
                  yq -i '.apiVersion = "strimzi.rhoc.bf2.dev/v1alpha1"' "${F}"
              fi 
              if [ $(yq e '.apiVersion == "kafka.strimzi.io/v1beta1"' "${F}") == "true" ]; then
                  yq -i '.apiVersion = "strimzi.rhoc.bf2.dev/v1beta1"' "${F}"
              fi
              if [ $(yq e '.apiVersion == "kafka.strimzi.io/v1beta2"' "${F}") == "true" ]; then
                  yq -i '.apiVersion = "strimzi.rhoc.bf2.dev/v1beta2"' "${F}"
              fi
              if [ $(yq e '.apiVersion == "core.strimzi.io/v1beta2"' "${F}") == "true" ]; then
                  yq -i '.apiVersion = "core.strimzi.rhoc.bf2.dev/v1beta2"' "${F}"
              fi
          done

      
      - name: 'SetUp KinD'
        uses: container-tools/kind-action@v2
        with:
          version: "v0.17.0"
          kubectl_version: v1.25.3
          registry: false
          node_image: kindest/node:v1.25.3

      - name: 'Login to Quay.io'
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.continer-registry }}
          username: ${{ secrets.continer-registry-username }}
          password: ${{ secrets.continer-registry-password }}

      - name: 'Build Strimzi'
        env:
          DOCKER_ORG: ${{ inputs.continer-registry-organization }}
          DOCKER_REGISTRY:  ${{ inputs.continer-registry }}
        run: |
          export TEST_CLUSTER=kubernetes
          #export MVN_ARGS='-V -ntp -Dhttp.keepAlive=false -e -Dsurefire.includes="io.strimzi.operator.cluster.KafkaConnect*Test.java"'
          
          # temporary skip all tests 
          export MVN_ARGS='-V -ntp -Dhttp.keepAlive=false -e -DskipTests'
          

          make all

      - name: 'Patch Strimzi Images'
        env:
          CONTAINER_IMAGE:  "${{ inputs.continer-registry }}/${{ inputs.continer-registry-organization }}/operator:latest"
        run: |
          yq -i '.spec.template.spec.containers[0].image = strenv(CONTAINER_IMAGE)' \
            packaging/install/cluster-operator/060-Deployment-strimzi-cluster-operator.yaml

      - name: 'Create Strimzi Release'
        uses: "marvinpinto/action-automatic-releases@latest" 
        with: 
          repo_token: "${{ secrets.github-token }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "${{ inputs.branch }}"
          files: |
            packaging/install/cluster-operator/*.yaml